'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CLASS_NAME = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _autoBind = require('@zippytech/react-class/autoBind');

var _autoBind2 = _interopRequireDefault(_autoBind);

var _cleanProps = require('../../common/cleanProps');

var _cleanProps2 = _interopRequireDefault(_cleanProps);

var _join = require('../../common/join');

var _join2 = _interopRequireDefault(_join);

var _shouldComponentUpdate = require('../../common/shouldComponentUpdate');

var _shouldComponentUpdate2 = _interopRequireDefault(_shouldComponentUpdate);

var _fileReadAsDataUrl = require('./utils/file-read-as-data-url');

var _fileReadAsDataUrl2 = _interopRequireDefault(_fileReadAsDataUrl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (c) 2015-present, Zippy Technologies
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This source code is licensed under the MIT license found in the
file in the root directory of this source tree.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

var CLASS_NAME = 'react-image-file-preview';

var ImageFilePreview = function (_Component) {
  _inherits(ImageFilePreview, _Component);

  function ImageFilePreview(props, context) {
    _classCallCheck(this, ImageFilePreview);

    var _this = _possibleConstructorReturn(this, (ImageFilePreview.__proto__ || Object.getPrototypeOf(ImageFilePreview)).call(this, props, context));

    (0, _autoBind2.default)(_this);

    _this.state = {
      loadedPreview: null
    };
    return _this;
  }

  _createClass(ImageFilePreview, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var file = this.props.file;

      if (file) {
        this.previewFile(this.props);
      }
    }
  }, {
    key: 'UNSAFE_componentWillReceiveProps',
    value: function UNSAFE_componentWillReceiveProps(nextProps) {
      var file = this.props.file;
      var nextFile = nextProps.file,
          fileReadAsDataUrl = nextProps.fileReadAsDataUrl;

      if (nextFile !== file) {
        this.previewFile(nextProps);
      }
    }
  }, {
    key: 'previewFile',
    value: function previewFile(_ref) {
      var _this2 = this;

      var file = _ref.file,
          fileReadAsDataUrl = _ref.fileReadAsDataUrl,
          onReady = _ref.onReady;

      if (file) {
        fileReadAsDataUrl(file).then(function (result) {
          _this2.setState({
            loadedPreview: result
          }, function () {
            onReady && onReady({ file: file, result: result });
          });
        });
      } else {
        this.setState({
          loadedPreview: null
        });
      }
    }
  }, {
    key: 'getDefaultContent',
    value: function getDefaultContent() {
      var defaultPreview = this.props.defaultPreview;

      var typeofDefaultPreview = typeof defaultPreview === 'undefined' ? 'undefined' : _typeof(defaultPreview);

      if (typeofDefaultPreview === 'string') {
        return _react2.default.createElement('img', { src: defaultPreview, alt: 'preview' });
      } else if (typeofDefaultPreview === 'function') {
        return defaultPreview();
      }

      return defaultPreview;
    }
  }, {
    key: 'getFilePreview',
    value: function getFilePreview() {
      var file = this.props.file;
      var loadedPreview = this.state.loadedPreview;


      return _react2.default.createElement('img', { src: loadedPreview, alt: file.name + '-preview' });
    }
  }, {
    key: 'getThumbStyle',
    value: function getThumbStyle() {
      var thumbSize = this.props.thumbSize;


      if (typeof thumbSize === 'number' && thumbSize !== NaN) {
        return { width: thumbSize, height: thumbSize };
      } else if (Array.isArray(thumbSize)) {
        return { width: thumbSize[0], height: thumbSize[1] };
      }

      return _extends({}, thumbSize);
    }
  }, {
    key: 'getClassNames',
    value: function getClassNames() {
      return CLASS_NAME;
    }
  }, {
    key: 'getProps',
    value: function getProps() {
      var _props = this.props,
          file = _props.file,
          defaultPreview = _props.defaultPreview,
          _props$style = _props.style,
          style = _props$style === undefined ? {} : _props$style;
      var loadedPreview = this.state.loadedPreview;


      var p = {
        children: loadedPreview ? this.getFilePreview() : this.getDefaultContent(),
        style: _extends({}, style, this.getThumbStyle()),
        className: this.getClassNames()
      };

      return p;
    }
  }, {
    key: 'render',
    value: function render() {
      var p = this.p = this.getProps();
      var children = p.children,
          style = p.style,
          className = p.className;


      return _react2.default.createElement('div', _extends({}, (0, _cleanProps2.default)(this.props, ImageFilePreview.propTypes), {
        className: className,
        style: style,
        children: children
      }));
    }
  }]);

  return ImageFilePreview;
}(_react.Component);

ImageFilePreview.defaultProps = {
  thumbSize: 125,
  fileReadAsDataUrl: _fileReadAsDataUrl2.default
};

ImageFilePreview.propTypes = {
  defaultPreview: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func, _propTypes2.default.object]),

  thumbSize: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.number), _propTypes2.default.object]),

  file: _propTypes2.default.object,

  onReady: _propTypes2.default.func,
  fileReadAsDataUrl: _propTypes2.default.func
};

exports.default = ImageFilePreview;
exports.CLASS_NAME = CLASS_NAME;