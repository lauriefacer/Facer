'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FileDroppable = exports.FileDropZoneRenderer = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _autoBind = require('@zippytech/react-class/autoBind');

var _autoBind2 = _interopRequireDefault(_autoBind);

var _cleanProps = require('../../common/cleanProps');

var _cleanProps2 = _interopRequireDefault(_cleanProps);

var _join = require('../../common/join');

var _join2 = _interopRequireDefault(_join);

var _shouldComponentUpdate = require('../../common/shouldComponentUpdate');

var _shouldComponentUpdate2 = _interopRequireDefault(_shouldComponentUpdate);

var _FileDroppable = require('./FileDroppable');

var _FileDroppable2 = _interopRequireDefault(_FileDroppable);

var _props = require('./props');

var _FileList = require('./Filelist/src/FileList');

var _pickProps = require('./utils/pick-props');

var _pickProps2 = _interopRequireDefault(_pickProps);

var _FileDropZoneRenderer = require('./FileDropZoneRenderer');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (c) 2015-present, Zippy Technologies
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This source code is licensed under the MIT license found in the
file in the root directory of this source tree.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

/**
 * File DropZone switcher component
 * ========================================================================
 */

var FileDropZone = function (_Component) {
  _inherits(FileDropZone, _Component);

  function FileDropZone(props, context) {
    _classCallCheck(this, FileDropZone);

    var _this = _possibleConstructorReturn(this, (FileDropZone.__proto__ || Object.getPrototypeOf(FileDropZone)).call(this, props, context));

    (0, _autoBind2.default)(_this);

    _this.state = { isValid: null };
    return _this;
  }

  _createClass(FileDropZone, [{
    key: 'UNSAFE_componentWillReceiveProps',
    value: function UNSAFE_componentWillReceiveProps() {
      var forwardProp = this._fileDZ && this._fileDZ.getForwardProp();
      var isValid = forwardProp.isValid,
          acceptInvalid = forwardProp.acceptInvalid;

      this.setState({ isValid: isValid, acceptInvalid: acceptInvalid });
    }
  }, {
    key: 'setDropZoneRef',
    value: function setDropZoneRef(el) {
      this._fileDZ = el;
    }
  }, {
    key: 'clearFiles',
    value: function clearFiles() {
      return this._fileDZ.clearFiles && this._fileDZ.clearFiles();
    }
  }, {
    key: 'getTotalFileSize',
    value: function getTotalFileSize() {
      return this._fileDZ.getTotalFileSize && this._fileDZ.getTotalFileSize();
    }
  }, {
    key: 'getFileNames',
    value: function getFileNames() {
      return this._fileDZ.getFileNames && this._fileDZ.getFileNames();
    }
  }, {
    key: 'getFiles',
    value: function getFiles() {
      return this._fileDZ.getFiles && this._fileDZ.getFiles();
    }
  }, {
    key: 'removeFileAt',
    value: function removeFileAt(idx) {
      return this._fileDZ.removeFileAt && this._fileDZ.removeFileAt(idx);
    }
  }, {
    key: 'removeFile',
    value: function removeFile(id) {
      return this._fileDZ.removeFile && this._fileDZ.removeFile(id);
    }
  }, {
    key: 'addFiles',
    value: function addFiles(files) {
      return this._fileDZ.addFiles && this._fileDZ.addFiles(files);
    }
  }, {
    key: 'revalidateFiles',
    value: function revalidateFiles() {
      return this._fileDZ.revalidateFiles && this._fileDZ.revalidateFiles();
    }
  }, {
    key: 'render',
    value: function render() {
      var props = this.props;
      var noEvents = props.noEvents,
          uploadProgress = props.uploadProgress,
          i18n = props.i18n;


      var fileDropZoneSpecificProps = (0, _pickProps2.default)(this.props, FileDropZone.propTypes);
      var hocSpecificProps = (0, _cleanProps2.default)(this.props, _props.hocPropTypes);
      if (noEvents) {
        return _react2.default.createElement(_FileDropZoneRenderer.FileDropZoneRenderer, _extends({}, fileDropZoneSpecificProps, {
          forwardProp: hocSpecificProps,
          i18n: i18n,
          connected: props.connected,
          ref: this.setDropZoneRef
        }));
      }
      // fileRef in constructor
      return _react2.default.createElement(_FileDropZoneRenderer.WrappedFileDropZoneRenderer, _extends({ ref: this.setDropZoneRef }, props));
    }
  }]);

  return FileDropZone;
}(_react.Component);

FileDropZone.defaultProps = _extends({}, _props.hocDefaultProps, _props.fdzDefaultProps);

FileDropZone.propTypes = _extends({
  connected: _propTypes2.default.bool,

  i18n: _propTypes2.default.object
}, _FileList.FileListPropTypes, _props.hocPropTypes, _props.fdzPropTypes);

exports.default = FileDropZone;
exports.FileDropZoneRenderer = _FileDropZoneRenderer.FileDropZoneRenderer;
exports.FileDroppable = _FileDroppable2.default;