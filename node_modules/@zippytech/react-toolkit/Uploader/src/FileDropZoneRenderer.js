'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CLASS_NAME = exports.WrappedFileDropZoneRenderer = exports.FileDropZoneRenderer = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**
                                                                                                                                                                                                                                                                   * Copyright (c) 2015-present, Zippy Technologies
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * This source code is licensed under the MIT license found in the
                                                                                                                                                                                                                                                                   * LICENSE file in the root directory of this source tree.
                                                                                                                                                                                                                                                                   */

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _autoBind = require('@zippytech/react-class/autoBind');

var _autoBind2 = _interopRequireDefault(_autoBind);

var _cleanProps = require('../../common/cleanProps');

var _cleanProps2 = _interopRequireDefault(_cleanProps);

var _FileList = require('./Filelist/src/FileList');

var _FileList2 = _interopRequireDefault(_FileList);

var _pickProps = require('./utils/pick-props');

var _pickProps2 = _interopRequireDefault(_pickProps);

var _join = require('../../common/join');

var _join2 = _interopRequireDefault(_join);

var _shouldComponentUpdate2 = require('../../common/shouldComponentUpdate');

var _shouldComponentUpdate3 = _interopRequireDefault(_shouldComponentUpdate2);

var _FileDroppable = require('./FileDroppable');

var _FileDroppable2 = _interopRequireDefault(_FileDroppable);

var _props3 = require('./props');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CLASS_NAME = 'zippy-react-file-drop-zone';

/**
 * Default render function
 * ========================================================================
 */

var renderFunction = function renderFunction(props) {
  var cleanedProps = (0, _cleanProps2.default)(props, FileDropZoneRenderer.propTypes);
  var isMarkedInvalid = props.isValid === false;
  var shouldShowInvalidMessage = isMarkedInvalid;
  var errorText = props.invalidText !== null ? props.invalidText : _react2.default.createElement(DefaultInvalidState, props);
  if (props.isOver) {
    return _react2.default.createElement(
      'div',
      { className: CLASS_NAME + '__over-state__layout' },
      isMarkedInvalid && errorText,
      FileListWrapper(cleanedProps, props),
      _react2.default.createElement(
        'div',
        { className: CLASS_NAME + '__over-state__wrapper' },
        props.overText || _react2.default.createElement(DefaultOverState, null),
        props.isEmpty && (props.emptyText || _react2.default.createElement(DefaultEmptyState, null))
      )
    );
  } else if (props.isEmpty) {
    return _react2.default.createElement(
      'div',
      { className: CLASS_NAME + '__empty-state__layout' },
      isMarkedInvalid && errorText,
      props.emptyText || _react2.default.createElement(DefaultEmptyState, null)
    );
  } else if (isMarkedInvalid) {
    return _react2.default.createElement(
      'div',
      { className: CLASS_NAME + '__invalid-state__layout' },
      errorText,
      FileListWrapper(cleanedProps, props)
    );
  } else {
    return FileListWrapper(cleanedProps, props);
  }
};

var DefaultEmptyState = function DefaultEmptyState(props) {
  return _react2.default.createElement(
    'div',
    { className: CLASS_NAME + '__empty-placeholder' },
    _react2.default.createElement(
      'svg',
      { className: CLASS_NAME + '__empty-icon', viewBox: '0 0 24 24' },
      _react2.default.createElement('path', { d: 'M0 0h24v24H0z', fill: 'none' }),
      _react2.default.createElement('path', { d: 'M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z' })
    ),
    _react2.default.createElement(
      'span',
      { className: CLASS_NAME + '__empty-text' },
      'Click "Select Files" or drag and drop your files here'
    )
  );
};

var DefaultOverState = function DefaultOverState(props) {
  return _react2.default.createElement('div', null);
};

var DefaultInvalidState = function DefaultInvalidState(props) {
  var files = props.files;


  var countProplematicErrors = files.filter(function (_ref) {
    var invalidDetails = _ref.invalidDetails;
    return invalidDetails;
  }).length;

  if (!countProplematicErrors) {
    return null;
  }

  return null;
};

var FileListWrapper = function FileListWrapper(cleanedProps, props) {
  var connected = props.connected;
  var FileList = props.fileList;

  return _react2.default.createElement(FileList, _extends({}, cleanedProps, getPropsForFilelist(props), {
    i18n: props.i18n,
    connected: connected
  }));
};

var getPropsForFilelist = function getPropsForFilelist(props) {
  var removeFile = props.removeFile,
      files = props.files,
      uploadFile = props.uploadFile,
      cancelUploadFile = props.cancelUploadFile,
      uploadProgress = props.uploadProgress,
      fileSizeFormatter = props.fileSizeFormatter,
      timeFormatter = props.timeFormatter,
      i18n = props.i18n;


  return _extends({}, (0, _pickProps2.default)(props, _FileList.FileListPropTypes), {
    files: files,
    onUploadClick: uploadFile,
    onUploadCancelClick: cancelUploadFile,
    onClearClick: removeFile,
    uploadProgress: uploadProgress,
    fileSizeFormatter: fileSizeFormatter,
    timeFormatter: timeFormatter
  });
};

/**
 * File DropZone dumb component
 * ========================================================================
 */

var FileDropZoneRenderer = function (_Component) {
  _inherits(FileDropZoneRenderer, _Component);

  function FileDropZoneRenderer() {
    _classCallCheck(this, FileDropZoneRenderer);

    return _possibleConstructorReturn(this, (FileDropZoneRenderer.__proto__ || Object.getPrototypeOf(FileDropZoneRenderer)).apply(this, arguments));
  }

  _createClass(FileDropZoneRenderer, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState) {
      return (0, _shouldComponentUpdate3.default)(this, nextProps, nextState);
    }
  }, {
    key: 'isInvalid',
    value: function isInvalid() {
      return this.props.isInvalid;
    }
  }, {
    key: 'getClassNames',
    value: function getClassNames() {
      var _props = this.props,
          forwardProp = _props.forwardProp,
          className = _props.className,
          theme = _props.theme,
          emptyClass = _props.emptyClass,
          overClass = _props.overClass,
          invalidClass = _props.invalidClass;
      var isOver = forwardProp.isOver,
          isEmpty = forwardProp.isEmpty,
          isValid = forwardProp.isValid,
          acceptInvalid = forwardProp.acceptInvalid;


      var extraClass = '';
      if (isOver) {
        extraClass = overClass;
      } else if (isEmpty) {
        extraClass = emptyClass;
      } else if (!isValid) {
        extraClass = invalidClass;
      }

      return (0, _join2.default)(className, extraClass, CLASS_NAME, CLASS_NAME + '--theme-' + theme, isEmpty && CLASS_NAME + '--empty', !isEmpty && CLASS_NAME + '--hasfiles', isOver && CLASS_NAME + '--over', isValid === true && CLASS_NAME + '--valid', acceptInvalid === true && isValid === false && CLASS_NAME + '--invalid');
    }
  }, {
    key: 'getStyle',
    value: function getStyle() {
      var _props2 = this.props,
          emptyStyle = _props2.emptyStyle,
          invalidStyle = _props2.invalidStyle,
          overStyle = _props2.overStyle,
          _props2$style = _props2.style,
          style = _props2$style === undefined ? {} : _props2$style,
          forwardProp = _props2.forwardProp;
      var isOver = forwardProp.isOver,
          isEmpty = forwardProp.isEmpty,
          isValid = forwardProp.isValid,
          acceptInvalid = forwardProp.acceptInvalid;


      var computedStyle = style;

      if (isOver) {
        computedStyle = _extends({}, style, overStyle);
      } else if (isEmpty) {
        computedStyle = _extends({}, style, emptyStyle);
      } else if (!isValid) {
        computedStyle = _extends({}, style, invalidStyle);
      }

      return computedStyle;
    }
  }, {
    key: 'onDragEnter',
    value: function onDragEnter(callback, dispatch, event) {
      if (callback) {
        callback(dispatch, event);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var props = this.props;
      var children = props.children,
          forwardProp = props.forwardProp,
          _props$forwardProp = props.forwardProp,
          events = _props$forwardProp.events,
          files = _props$forwardProp.files;

      var _ref2 = events || {},
          onDragEnter = _ref2.onDragEnter;

      return _react2.default.createElement(
        'div',
        _extends({}, (0, _cleanProps2.default)(props, FileDropZoneRenderer.propTypes), events, {
          className: this.getClassNames(),
          style: this.getStyle(),
          onDragEnter: this.onDragEnter.bind(this, onDragEnter)
        }),
        children(_extends({}, (0, _pickProps2.default)(props, FileDropZoneRenderer.propTypes), forwardProp))
      );
    }
  }]);

  return FileDropZoneRenderer;
}(_react.Component);

FileDropZoneRenderer.defaultProps = _extends({
  children: renderFunction,
  forwardProp: {},
  fileList: _FileList2.default
}, _props3.hocDefaultProps, _props3.fdzDefaultProps);

FileDropZoneRenderer.propTypes = _extends({
  forwardProp: _propTypes2.default.object,
  i18n: _propTypes2.default.object,
  children: _propTypes2.default.func,
  connected: _propTypes2.default.bool,
  renderListScroller: _propTypes2.default.func,
  clearFiles: _propTypes2.default.func,
  getFileNames: _propTypes2.default.func,
  getFiles: _propTypes2.default.func,
  getTotalFileSize: _propTypes2.default.func,

  removeFile: _propTypes2.default.func,
  removeFileAt: _propTypes2.default.func,

  uploadFile: _propTypes2.default.func,
  cancelUploadFile: _propTypes2.default.func,

  events: _propTypes2.default.object,
  files: _propTypes2.default.arrayOf(_propTypes2.default.object),

  isEmpty: _propTypes2.default.bool,
  isOver: _propTypes2.default.bool,
  isValid: _propTypes2.default.bool

}, _props3.hocPropTypes, _props3.fdzPropTypes, _FileList.FileListPropTypes);

var WrappedFileDropZoneRenderer = (0, _FileDroppable2.default)(FileDropZoneRenderer);

exports.FileDropZoneRenderer = FileDropZoneRenderer;
exports.WrappedFileDropZoneRenderer = WrappedFileDropZoneRenderer;
exports.CLASS_NAME = CLASS_NAME;