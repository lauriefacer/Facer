'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _assign = require('../../common/assign');

var _assign2 = _interopRequireDefault(_assign);

var _shouldComponentUpdate2 = require('../../common/shouldComponentUpdate');

var _shouldComponentUpdate3 = _interopRequireDefault(_shouldComponentUpdate2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (c) 2015-present, Zippy Technologies
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This source code is licensed under the MIT license found in the
file in the root directory of this source tree.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

var Steps = function (_Component) {
  _inherits(Steps, _Component);

  function Steps() {
    _classCallCheck(this, Steps);

    return _possibleConstructorReturn(this, (Steps.__proto__ || Object.getPrototypeOf(Steps)).apply(this, arguments));
  }

  _createClass(Steps, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState) {
      return (0, _shouldComponentUpdate3.default)(this, nextProps, nextState);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          className = _props.className,
          stepTickDirection = _props.stepTickDirection,
          style = _props.style;


      var steps = this.renderSteps();

      return _react2.default.createElement(
        'div',
        { className: className, style: style },
        steps
      );
    }
  }, {
    key: 'renderSteps',
    value: function renderSteps() {
      var _props2 = this.props,
          formatedStep = _props2.formatedStep,
          directionMap = _props2.directionMap,
          stepClassName = _props2.stepClassName,
          stepStyle = _props2.stepStyle,
          value = _props2.value,
          renderStep = _props2.renderStep;


      return formatedStep.map(function (_ref, index) {
        var _extends2;

        var from = _ref.from,
            to = _ref.to;

        var style = _extends({}, stepStyle, (_extends2 = {}, _defineProperty(_extends2, directionMap.start, from + '%'), _defineProperty(_extends2, directionMap.end, to + '%'), _extends2));

        var result = void 0;

        var domProps = {
          style: style,
          key: index,
          className: stepClassName + ' ' + stepClassName + '__' + (index + 1)
        };

        if (renderStep) {
          result = renderStep({ domProps: domProps, from: from, to: to, index: index, value: value });
        }

        if (result === undefined) {
          result = _react2.default.createElement('div', domProps);
        }

        return result;
      });
    }
  }]);

  return Steps;
}(_react.Component);

Steps.defaultProps = {};

Steps.propTypes = {
  className: _propTypes2.default.string,
  stepStyle: _propTypes2.default.object,
  stepTickDirection: _propTypes2.default.number,
  formatedStep: _propTypes2.default.arrayOf(_propTypes2.default.object),
  renderStep: _propTypes2.default.func,
  directionMap: _propTypes2.default.object
};

exports.default = Steps;