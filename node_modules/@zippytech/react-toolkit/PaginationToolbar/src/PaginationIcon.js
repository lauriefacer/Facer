'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Button = require('../../Button');

var _Button2 = _interopRequireDefault(_Button);

var _join = require('../../common/join');

var _join2 = _interopRequireDefault(_join);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (c) 2015-present, Zippy Technologies
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This source code is licensed under the MIT license found in the
file in the root directory of this source tree.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

var ICON_CLASS_NAME = 'zippy-react-pagination-toolbar__icon';

var PaginationIcon = function (_React$Component) {
  _inherits(PaginationIcon, _React$Component);

  function PaginationIcon() {
    _classCallCheck(this, PaginationIcon);

    return _possibleConstructorReturn(this, (PaginationIcon.__proto__ || Object.getPrototypeOf(PaginationIcon)).apply(this, arguments));
  }

  _createClass(PaginationIcon, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          icon = _props.icon,
          size = _props.size,
          disabled = _props.disabled,
          action = _props.action,
          name = _props.name;


      var className = (0, _join2.default)(ICON_CLASS_NAME, ICON_CLASS_NAME + '--named--' + name);

      return _react2.default.createElement(_Button2.default, {
        disabled: disabled,
        className: className,
        icon: (0, _react.cloneElement)(icon, { width: size, height: size }),
        onClick: action,
        theme: 'light'
      });
    }
  }]);

  return PaginationIcon;
}(_react2.default.Component);

exports.default = PaginationIcon;


PaginationIcon.propTypes = {
  name: _propTypes2.default.string,
  action: _propTypes2.default.func,
  disabled: _propTypes2.default.bool,
  icon: _propTypes2.default.node,
  size: _propTypes2.default.number
};