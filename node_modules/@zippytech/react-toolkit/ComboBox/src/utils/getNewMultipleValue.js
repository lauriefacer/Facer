"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/**
 * Copyright (c) 2015-present, Zippy Technologies
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Gets new multiple value when an item
 * has been clicked.
 * @param  {String|number} id    Id of the item
 * @param  {Array|null} value previous value
 * @return {Array|null}       newValue
 */
function getNewMultipleValue(_ref) {
  var id = _ref.id,
      value = _ref.value;

  var newValue = void 0;

  var isArray = Array.isArray(value);
  var hasValue = isArray && value.indexOf(id) !== -1;
  if (hasValue) {
    newValue = value.filter(function (itemId) {
      return itemId !== id;
    });
    newValue = newValue.length ? newValue : null;
  } else {
    // can be null
    newValue = isArray ? [].concat(_toConsumableArray(value), [id]) : [id];
  }

  return newValue;
}

exports.default = getNewMultipleValue;