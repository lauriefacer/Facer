"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * Copyright (c) 2015-present, Zippy Technologies
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Selects valid props for Value
 */
function getValueProps(_ref) {
  var _extends2;

  var state = _ref.state,
      props = _ref.props,
      computed = _ref.computed,
      tagProps = _ref.tagProps;
  var multiple = props.multiple,
      renderTag = props.renderTag,
      renderTags = props.renderTags,
      tagBorder = props.tagBorder,
      tagStyle = props.tagStyle,
      tagPadding = props.tagPadding,
      tagHeight = props.tagHeight,
      tagWidth = props.tagWidth,
      tagMinSize = props.tagMinSize,
      tagMaxSize = props.tagMaxSize,
      tagCloseIcon = props.tagCloseIcon,
      tagCloseIconPosition = props.tagCloseIconPosition,
      maxTagsLength = props.maxTagsLength,
      renderRemainingTags = props.renderRemainingTags,
      renderDisplayValue = props.renderDisplayValue,
      searchable = props.searchable,
      renderTagLabel = props.renderTagLabel;
  var focus = state.focus;


  var rootClassName = props.rootClassName + "__value";

  tagProps = _extends({}, tagProps, {
    closeIcon: tagCloseIcon,
    border: tagBorder,
    style: tagStyle,
    padding: tagPadding,
    height: tagHeight,
    width: tagWidth,
    minSize: tagMinSize,
    maxSize: tagMaxSize,
    closeIconPosition: tagCloseIconPosition,
    ellipsis: props.tagEllipsis
  });

  var valueProps = _extends((_extends2 = {
    renderTagLabel: renderTagLabel,
    multiple: multiple,
    searchable: searchable,
    rootClassName: rootClassName,
    renderTag: renderTag,
    renderRemainingTags: renderRemainingTags,
    renderTags: renderTags,
    tagProps: tagProps,
    maxTagsLength: maxTagsLength,
    focus: focus
  }, _defineProperty(_extends2, "maxTagsLength", maxTagsLength), _defineProperty(_extends2, "renderDisplayValue", renderDisplayValue), _extends2), computed);

  return valueProps;
}

exports.default = getValueProps;