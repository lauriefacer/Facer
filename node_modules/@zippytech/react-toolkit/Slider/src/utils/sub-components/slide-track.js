'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTrackFillPercentages = exports.renderTrack = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**
                                                                                                                                                                                                                                                                   * Copyright (c) 2015-present, Zippy Technologies
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * This source code is licensed under the MIT license found in the
                                                                                                                                                                                                                                                                   * LICENSE file in the root directory of this source tree.
                                                                                                                                                                                                                                                                   */

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _join = require('../../../../common/join');

var _join2 = _interopRequireDefault(_join);

var _valueUtils = require('../value-utils');

var _stylingUtils = require('../styling-utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getTrackFillPercentages = function getTrackFillPercentages(config) {
  var currentValue = config.currentValue,
      startValue = config.startValue,
      endValue = config.endValue,
      isReversed = config.isReversed,
      trackFillPosition = config.trackFillPosition;


  if (Array.isArray(currentValue)) {
    var _ref = [(0, _valueUtils.getPossitionOfValueBasedOnLimits)(currentValue[0], {
      startValue: startValue,
      endValue: endValue
    }), (0, _valueUtils.getPossitionOfValueBasedOnLimits)(currentValue[1], {
      startValue: startValue,
      endValue: endValue
    })],
        start = _ref[0],
        end = _ref[1];

    return [Math.min(start, end), Math.max(start, end)];
  }
  if (trackFillPosition === 'start') {
    return [0, (0, _valueUtils.getPossitionOfValueBasedOnLimits)(currentValue, { startValue: startValue, endValue: endValue })];
  }
  return [(0, _valueUtils.getPossitionOfValueBasedOnLimits)(currentValue, { startValue: startValue, endValue: endValue }), 1];
};

var getTrackFillPercentagesBasedOnRtl = function getTrackFillPercentagesBasedOnRtl(config) {
  var horizontal = config.horizontal,
      trackFillPosition = config.trackFillPosition,
      rtl = config.rtl,
      currentValue = config.currentValue,
      startValue = config.startValue,
      endValue = config.endValue,
      isReversed = config.isReversed;


  var computedTrackFillPosition = trackFillPosition;

  if (horizontal) {
    if (rtl) {
      if (trackFillPosition === 'end') {
        computedTrackFillPosition = 'start';
      } else {
        computedTrackFillPosition = 'end';
      }
    }
  }

  return getTrackFillPercentages({
    currentValue: currentValue,
    startValue: startValue,
    endValue: endValue,
    isReversed: isReversed,
    trackFillPosition: computedTrackFillPosition
  });
};

var renderTrack = function renderTrack(config, extraConfig, CLASS_NAME) {
  var noFill = config.noFill,
      trackStyle = config.trackStyle,
      horizontal = config.horizontal,
      trackLineStyle = config.trackLineStyle,
      tickBarPosition = config.tickBarPosition,
      orientation = config.orientation;


  var trackFillStyle = _extends({}, config.trackFillStyle, (0, _stylingUtils.convertProcentageRangeToPositionStyles)(getTrackFillPercentagesBasedOnRtl(config), horizontal));

  var handlerComponents = extraConfig.handlerComponents,
      handleTrackMouseDown = extraConfig.handleTrackMouseDown,
      handleTrackClick = extraConfig.handleTrackClick,
      setTrackLineRef = extraConfig.setTrackLineRef,
      setTrackFillRef = extraConfig.setTrackFillRef,
      tabIndex = extraConfig.tabIndex,
      focused = extraConfig.focused,
      endhandle = extraConfig.endhandle,
      startHandle = extraConfig.startHandle;


  var trackClassName = CLASS_NAME + '__track';
  trackClassName = (0, _join2.default)(trackClassName, trackClassName + '-' + tickBarPosition);

  var classNames = (0, _join2.default)(trackClassName, focused && CLASS_NAME + '__track--focused');
  var tarckFillClassNames = (0, _join2.default)(CLASS_NAME + '__track-fill', focused && CLASS_NAME + '__track-fill--focused');

  return _react2.default.createElement(
    'div',
    {
      key: 'track',
      className: classNames,
      style: trackStyle,
      onClick: handleTrackClick,
      onMouseDown: handleTrackMouseDown
    },
    _react2.default.createElement(
      'div',
      {
        ref: setTrackLineRef,
        className: CLASS_NAME + '__track-line',
        style: trackLineStyle
      },
      !noFill && _react2.default.createElement('div', {
        ref: setTrackFillRef,
        className: tarckFillClassNames,
        tabIndex: tabIndex,
        style: trackFillStyle
      }),
      handlerComponents
    )
  );
};

exports.renderTrack = renderTrack;
exports.getTrackFillPercentages = getTrackFillPercentages;