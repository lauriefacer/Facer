'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FooterButton = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**
                                                                                                                                                                                                                                                                   * Copyright (c) 2015-present, Zippy Technologies
                                                                                                                                                                                                                                                                   *
                                                                                                                                                                                                                                                                   * This source code is licensed under the MIT license found in the
                                                                                                                                                                                                                                                                   * LICENSE file in the root directory of this source tree.
                                                                                                                                                                                                                                                                   */

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactClass = require('@zippytech/react-class');

var _reactClass2 = _interopRequireDefault(_reactClass);

var _Flex = require('../../Flex');

var _InlineBlock = require('./InlineBlock');

var _InlineBlock2 = _interopRequireDefault(_InlineBlock);

var _Button = require('../../Button');

var _Button2 = _interopRequireDefault(_Button);

var _assign = require('../../common/assign');

var _assign2 = _interopRequireDefault(_assign);

var _join = require('../../common/join');

var _join2 = _interopRequireDefault(_join);

var _joinFunctions = require('./joinFunctions');

var _joinFunctions2 = _interopRequireDefault(_joinFunctions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var numbers = [1];
var SPACER = numbers.map(function (item, index) {
  return _react2.default.createElement(_Flex.Item, { key: 'footer_spacer_' + index * 37 });
});

var preventDefault = function preventDefault(e) {
  return e.preventDefault();
};

var FooterButton = exports.FooterButton = function FooterButton(props) {
  var disabledClassName = props.disabled ? props.rootClassName + '-button--disabled' : '';
  var cancelButtonClass = props.children === 'Cancel' ? props.rootClassName + '-button-cancel' : '';
  var className = (props.className || '') + ' ' + cancelButtonClass + ' ' + props.rootClassName + '-button ' + disabledClassName;
  var buttonProps = _extends({}, props);
  delete buttonProps.rootClassName;
  return _react2.default.createElement(_Button2.default, _extends({ tabIndex: -1 }, buttonProps, { className: className }));
};

var Footer = function (_Component) {
  _inherits(Footer, _Component);

  function Footer() {
    _classCallCheck(this, Footer);

    return _possibleConstructorReturn(this, (Footer.__proto__ || Object.getPrototypeOf(Footer)).apply(this, arguments));
  }

  _createClass(Footer, [{
    key: 'render',
    value: function render() {
      var props = this.p = (0, _assign2.default)({}, this.props);
      var rootClassName = props.rootClassName;

      var className = (0, _join2.default)(props.className, rootClassName, rootClassName + '--theme-' + props.theme, rootClassName + '--button-cancel');

      var todayButton = this.renderTodayButton();
      var clearButton = this.renderClearButton();

      var okButton = this.renderOkButton();
      var cancelButton = this.renderCancelButton();

      if (!todayButton && !clearButton && !okButton && !cancelButton) {
        return null;
      }

      var middleSpacer = okButton || cancelButton ? SPACER : null;

      var spacer = !props.centerButtons ? middleSpacer : null;

      var children = [props.centerButtons && SPACER, todayButton, clearButton, spacer, okButton, cancelButton, props.centerButtons && SPACER];

      if (props.renderChildren) {
        children = props.renderChildren(children, props);
      }

      var flexProps = (0, _assign2.default)({}, props);

      delete flexProps.rootClassName;
      delete flexProps.actionEvent;
      delete flexProps.buttonFactory;
      delete flexProps.cancelButton;
      delete flexProps.cancelButtonText;
      delete flexProps.centerButtons;
      delete flexProps.clearDate;
      delete flexProps.cleanup;
      delete flexProps.clearButton;
      delete flexProps.clearButtonText;
      delete flexProps.isDatePickerFooter;
      delete flexProps.onCancelClick;
      delete flexProps.onClearClick;
      delete flexProps.onOkClick;
      delete flexProps.onTodayClick;
      delete flexProps.okButton;
      delete flexProps.okButtonText;
      delete flexProps.selectDate;
      delete flexProps.theme;
      delete flexProps.todayButton;
      delete flexProps.todayButtonText;

      if (typeof props.cleanup == 'function') {
        props.cleanup(flexProps);
      }

      return _react2.default.createElement(_Flex.Flex, _extends({
        key: 'footer',
        inline: true,
        row: true
      }, flexProps, {
        justifyContent: 'center',
        className: className,
        children: children
      }));
    }
  }, {
    key: 'renderTodayButton',
    value: function renderTodayButton() {
      if (!this.props.todayButton) {
        return null;
      }
      return this.renderButton({
        children: this.props.todayButtonText,
        'data-name': 'today-button'
      }, this.props.onTodayClick);
    }
  }, {
    key: 'renderClearButton',
    value: function renderClearButton() {
      if (!this.props.clearButton) {
        return null;
      }

      return this.renderButton({
        children: this.props.clearButtonText,
        disabled: this.props.clearDate === undefined,
        'data-name': 'clear-button'
      }, this.props.onClearClick);
    }
  }, {
    key: 'renderOkButton',
    value: function renderOkButton() {
      if (!this.props.okButton) {
        return null;
      }
      return this.renderButton({ children: this.props.okButtonText, 'data-name': 'ok-button' }, this.props.onOkClick);
    }
  }, {
    key: 'renderCancelButton',
    value: function renderCancelButton() {
      var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';

      if (!this.props.cancelButton) {
        return null;
      }
      return this.renderButton({ children: this.props.cancelButtonText, 'data-name': 'cancel-button' }, this.props.onCancelClick, theme);
    }
  }, {
    key: 'renderButton',
    value: function renderButton(props, fn, theme) {
      var text = props.children;
      var p = props;

      if (typeof props == 'string') {
        p = {};
        text = props;
      }

      if (typeof fn == 'function' && !p.onClick && !p.disabled) {
        p.onClick = fn;
      }

      var Factory = this.props.buttonFactory;

      var onMouseDown = p.onMouseDown ? (0, _joinFunctions2.default)(p.onMouseDown, preventDefault) : preventDefault;

      return _react2.default.createElement(
        Factory,
        _extends({
          key: 'footer_' + text,
          tabIndex: 0
        }, p, {
          rootClassName: this.props.rootClassName,
          onMouseDown: onMouseDown,
          theme: theme
        }),
        text
      );
    }
  }]);

  return Footer;
}(_reactClass2.default);

exports.default = Footer;


Footer.defaultProps = {
  rootClassName: 'zippy-react-toolkit-calendar__footer',
  actionEvent: 'onClick',
  theme: 'default',

  buttonFactory: FooterButton,

  todayButton: true,
  clearButton: false,
  okButton: true,
  cancelButton: true,

  todayButtonText: 'Today',
  clearButtonText: 'Clear',
  okButtonText: 'OK',
  cancelButtonText: 'Cancel',

  isDatePickerFooter: true
};

Footer.propTypes = {
  isDatePickerFooter: _propTypes2.default.bool,
  rootClassName: _propTypes2.default.string,
  theme: _propTypes2.default.string,
  actionEvent: _propTypes2.default.string,
  centerButtons: _propTypes2.default.bool,
  buttonFactory: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.object]),

  clearDate: _propTypes2.default.object,
  okButtonText: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]),
  clearButtonText: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]),
  cancelButtonText: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]),
  todayButtonText: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]),

  todayButton: _propTypes2.default.bool,
  clearButton: _propTypes2.default.bool,
  okButton: _propTypes2.default.bool,
  cancelButton: _propTypes2.default.bool,
  disabled: _propTypes2.default.bool,

  onTodayClick: _propTypes2.default.func,
  onClearClick: _propTypes2.default.func,
  onOkClick: _propTypes2.default.func,
  onCancelClick: _propTypes2.default.func,

  renderChildren: _propTypes2.default.func,
  cleanup: _propTypes2.default.func
};