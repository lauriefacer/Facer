'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactClass = require('@zippytech/react-class');

var _reactClass2 = _interopRequireDefault(_reactClass);

var _assign = require('../../common/assign');

var _assign2 = _interopRequireDefault(_assign);

var _Flex = require('../../Flex');

var _join = require('../../common/join');

var _join2 = _interopRequireDefault(_join);

var _cleanProps = require('../../common/cleanProps');

var _cleanProps2 = _interopRequireDefault(_cleanProps);

var _bemFactory = require('./bemFactory');

var _bemFactory2 = _interopRequireDefault(_bemFactory);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (c) 2015-present, Zippy Technologies
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This source code is licensed under the MIT license found in the
file in the root directory of this source tree.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

var Body = function (_Component) {
  _inherits(Body, _Component);

  function Body() {
    _classCallCheck(this, Body);

    return _possibleConstructorReturn(this, (Body.__proto__ || Object.getPrototypeOf(Body)).apply(this, arguments));
  }

  _createClass(Body, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      var rootClassName = props.rootClassName,
          style = props.style;

      var className = (0, _join2.default)(props.className, rootClassName, rootClassName + '--tab-position-' + props.tabPosition, rootClassName + '--orientation-' + (props.vertical ? 'vertical' : 'horizontal'), props.transition && rootClassName + '--transition', props.stretchTabContent && rootClassName + '--stretch-tab-content', props.stretchTabContent && rootClassName + '--stretch-tab-content', props.scrollTabContent && rootClassName + '--scroll-tab-content', props.transitioning && props.transitioning !== true && rootClassName + '--transition-' + (props.transitioning == -1 ? 'prev' : 'next'), props.transitionInProgress && rootClassName + '--transitioning');
      var content = props.renderContent(props.children);

      return _react2.default.createElement(_Flex.Flex, _extends({}, (0, _cleanProps2.default)(props, Body.propTypes), {
        row: true,
        wrap: false,
        alignItems: 'start',
        flexGrow: 1,
        flexShrink: 1,
        flexBasis: 'auto',
        className: className,
        children: content
      }));
    }
  }]);

  return Body;
}(_reactClass2.default);

exports.default = Body;


Body.propTypes = {
  renderContent: _propTypes2.default.func,
  rootClassName: _propTypes2.default.string,
  transitioning: _propTypes2.default.number,
  isTabBody: _propTypes2.default.bool,
  stretchTabContent: _propTypes2.default.bool,
  scrollTabContent: _propTypes2.default.bool,
  vertical: _propTypes2.default.bool,
  transition: _propTypes2.default.bool,
  activeIndex: _propTypes2.default.number,
  tabPosition: _propTypes2.default.string,
  transitionInProgress: _propTypes2.default.bool
};

Body.defaultProps = {
  renderContent: function renderContent(children) {
    return children;
  },
  isTabBody: true
};