'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactClass = require('@zippytech/react-class');

var _reactClass2 = _interopRequireDefault(_reactClass);

var _join = require('../../../common/join');

var _join2 = _interopRequireDefault(_join);

var _cleanProps = require('../../../common/cleanProps');

var _cleanProps2 = _interopRequireDefault(_cleanProps);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (c) 2015-present, Zippy Technologies
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This source code is licensed under the MIT license found in the
file in the root directory of this source tree.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

var MenuItemCell = function (_Component) {
  _inherits(MenuItemCell, _Component);

  function MenuItemCell() {
    _classCallCheck(this, MenuItemCell);

    return _possibleConstructorReturn(this, (MenuItemCell.__proto__ || Object.getPrototypeOf(MenuItemCell)).apply(this, arguments));
  }

  _createClass(MenuItemCell, [{
    key: 'render',
    value: function render() {
      var props = this.props;
      var cellProps = props.cellProps,
          rootClassName = props.rootClassName,
          align = props.align;


      var children = props.expander || props.children;
      var className = (0, _join2.default)(props.className, cellProps.className, rootClassName + '__cell', props.isDescription && rootClassName + '__cell--secondaryLabel', props.isIcon && rootClassName + '__cell--icon');

      var style = _extends({}, props.style, cellProps.style);

      if (align) {
        style.textAlign = align;
      }

      return _react2.default.createElement(
        'td',
        _extends({}, (0, _cleanProps2.default)(props, MenuItemCell.propTypes), cellProps, {
          style: style,
          className: className
        }),
        children
      );
    }
  }]);

  return MenuItemCell;
}(_reactClass2.default);

exports.default = MenuItemCell;


MenuItemCell.defaultProps = {
  cellProps: {}
};

MenuItemCell.propTypes = {
  isDescription: _propTypes2.default.bool,
  isIcon: _propTypes2.default.bool,
  rootClassName: _propTypes2.default.string,
  column: _propTypes2.default.object,
  cellProps: _propTypes2.default.object,
  rtl: _propTypes2.default.bool,
  expander: _propTypes2.default.node,
  align: _propTypes2.default.oneOf(['start', 'end', 'center', 'left', 'right'])
};