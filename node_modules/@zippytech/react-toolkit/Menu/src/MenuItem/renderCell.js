'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; /**
                                                                                                                                                                                                                                                                               * Copyright (c) 2015-present, Zippy Technologies
                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                               * This source code is licensed under the MIT license found in the
                                                                                                                                                                                                                                                                               * LICENSE file in the root directory of this source tree.
                                                                                                                                                                                                                                                                               */

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _assign = require('../../../common/assign');

var _assign2 = _interopRequireDefault(_assign);

var _join = require('../../../common/join');

var _join2 = _interopRequireDefault(_join);

var _MenuItemCell = require('./MenuItemCell');

var _MenuItemCell2 = _interopRequireDefault(_MenuItemCell);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 *  About style - style can come from several places, they overwrite each
 *  other in the folowing order:
 *  - cellStyle that comes from Menu props (globalCellStyle)
 *  - cellStyle from column
 *  - cellStyle that comes from
 **/
exports.default = function (props, column, index, columns) {
  var hasSubmenu = props.hasSubmenu,
      rootClassName = props.rootClassName;
  var globalCellStyle = props.globalCellStyle;

  var item = props.items && props.items[index];

  if (typeof globalCellStyle == 'function') {
    globalCellStyle = globalCellStyle({
      index: index,
      columns: columns,
      items: props.items,
      item: item,
      hasSubmenu: hasSubmenu
    });
  }

  var style = (0, _assign2.default)({}, globalCellStyle);
  var isLast = index === columns.length - 1;
  var cellProps = (0, _assign2.default)({}, props.cellProps);

  /**
   * no need to check if it is expander as expander is rendered
   * in prepareChildren
   */
  if (isLast && props.siblingItemHasSubMenu && !props.item.items) {
    // cellProps.colSpan = 2
  }

  var children = void 0;

  if (column && typeof column.render == 'function') {
    children = column.render(props.item, {
      column: column,
      columns: columns,
      index: index,
      items: props.items,
      item: item,
      hasSubmenu: hasSubmenu
    });
  } else {
    var columnName = typeof column == 'string' ? column : column.name;
    children = props.item[columnName];
  }

  if ((typeof column === 'undefined' ? 'undefined' : _typeof(column)) === 'object') {
    if (column.colSpan) {
      cellProps.colSpan = column.colSpan;
    }
  }

  if (column.style) {
    var columnStyle = void 0;

    if (typeof column.style === 'function') {
      columnStyle = column.style({
        index: index,
        columns: columns,
        items: props.items,
        item: item,
        hasSubmenu: hasSubmenu
      });
    } else {
      columnStyle = column.style;
    }

    (0, _assign2.default)(style, columnStyle);
  }

  var className = column.className;

  if (item) {
    if (item.cellStyle) {
      (0, _assign2.default)(style, item.cellStyle);
    }
    if (item.className) {
      className = (0, _join2.default)(className, item.cellClassName);
    }
  }

  if (props.style) {
    (0, _assign2.default)(style, props.style);
  }

  return _react2.default.createElement(
    _MenuItemCell2.default,
    {
      style: style,
      className: className,
      key: index,
      rootClassName: rootClassName,
      cellProps: cellProps,
      isDescription: column.isDescription,
      isIcon: column.isIcon,
      align: column.align
    },
    children
  );
};