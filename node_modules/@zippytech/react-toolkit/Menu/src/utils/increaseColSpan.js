'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/**
 * Copyright (c) 2015-present, Zippy Technologies
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

function increaseColSpan(column) {
  var newColumn = column;
  if (typeof newColumn === 'string') {
    newColumn = {
      name: newColumn,
      colSpan: 2
    };
  } else {
    newColumn = _extends({}, column, {
      colSpan: newColumn.colSpan ? newColumn.colSpan + 1 : 2
    });
  }
  return newColumn;
}

function increaseLastColumnColSpan(columns) {
  return [].concat(_toConsumableArray(columns.slice(0, -1)), [increaseColSpan(columns[columns.length - 1])]);
}

function increaseFirstColumnColSpan(columns) {
  return [increaseColSpan(columns[0])].concat(_toConsumableArray(columns.slice(1)));
}

exports.default = increaseColSpan;
exports.increaseLastColumnColSpan = increaseLastColumnColSpan;
exports.increaseFirstColumnColSpan = increaseFirstColumnColSpan;