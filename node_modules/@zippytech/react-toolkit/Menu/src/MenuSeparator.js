'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _assign = require('../../common/assign');

var _assign2 = _interopRequireDefault(_assign);

var _reactClass = require('@zippytech/react-class');

var _reactClass2 = _interopRequireDefault(_reactClass);

var _join = require('../../common/join');

var _join2 = _interopRequireDefault(_join);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (c) 2015-present, Zippy Technologies
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This source code is licensed under the MIT license found in the
file in the root directory of this source tree.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

var MenuSeparator = function (_Component) {
  _inherits(MenuSeparator, _Component);

  function MenuSeparator() {
    _classCallCheck(this, MenuSeparator);

    return _possibleConstructorReturn(this, (MenuSeparator.__proto__ || Object.getPrototypeOf(MenuSeparator)).apply(this, arguments));
  }

  _createClass(MenuSeparator, [{
    key: 'render',
    value: function render() {
      var props = this.prepareProps(this.props);

      return _react2.default.createElement(
        'tr',
        { className: props.className },
        _react2.default.createElement(
          'td',
          { colSpan: 100 },
          _react2.default.createElement('div', {
            className: props.rootClassName + '__menu-separator__tool',
            style: props.style
          })
        )
      );
    }
  }, {
    key: 'prepareProps',
    value: function prepareProps(thisProps) {
      var props = {};

      (0, _assign2.default)(props, thisProps);

      props.style = this.prepareStyle(props);
      props.className = this.prepareClassName(props);

      return props;
    }
  }, {
    key: 'prepareClassName',
    value: function prepareClassName(props) {
      var className = (0, _join2.default)(props.rootClassName + '__menu-separator', props.className);

      return className;
    }
  }, {
    key: 'prepareStyle',
    value: function prepareStyle(props) {
      return (0, _assign2.default)({}, props.style, props.menuSeparatorStyle);
    }
  }]);

  return MenuSeparator;
}(_reactClass2.default);

MenuSeparator.defaultProps = {
  isSeparator: true
};

exports.default = MenuSeparator;